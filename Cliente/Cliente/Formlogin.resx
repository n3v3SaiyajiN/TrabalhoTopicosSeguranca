<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>